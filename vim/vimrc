" vim:fdm=marker
" General setting {{{
set nocompatible
execute pathogen#infect()
syntax on
filetype plugin indent on
set term=xterm-256color
set hidden
set spelllang=en_US
set backspace=2
set number
set tw=0
set wrap
set linebreak
set history=700
set undolevels=700
set nobackup
set nowritebackup
set noswapfile
set nohlsearch
set incsearch " incremental search
set ignorecase
set smartcase
set list
set listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮
set cursorline
if has("autocmd") " load .vimrc automatically on changes
  autocmd! bufwritepost .vimrc source %
endif
" }}}
" Leader bindings {{{
let mapleader = ","
imap jj <esc>
nmap <Leader>e :cnext<CR>
nmap <Leader>E :cprevious<CR>
nmap <Leader>ev :vsplit $MYVIMRC<CR>
nmap <Leader>n :bn<CR>
nmap <Leader>m :bp<CR>
nmap <Leader>s :set spell!<CR>
nmap <leader>p gqip " wrap paragraph
nmap <leader>f :LustyFilesystemExplorer<CR>
nmap <leader>T :LustyBufferExplorer<CR>
nmap <leader>w :w<CR>
nmap <leader>q :q<CR>
nmap <leader>T :LustyBufferExplorer<CR>
" }}}
" Keybindings {{{
imap <C-h> <left>
imap <C-l> <right>
imap <C-j> <down>
imap <C-k> <up>
imap <C-e> <esc>$a
imap <C-a> <esc>^i
nmap <C-a> ^
nmap <C-e> $
nmap <space> za
imap <S-down> <esc>vj
nmap <S-down> <esc>vj
vmap <S-down> j
imap <S-up> <esc>vk
nmap <S-up> <esc>vk
vmap <S-up> k
nmap <S-right> <esc>vl
imap <S-right> <esc>vl
vmap <S-up> l
nmap <S-left> <esc>vh
imap <S-left> <esc>vh
vmap <S-up> h
"
" }}}
" Window navigation {{{
nmap <c-j> <c-w>j
nmap <c-k> <c-w>k
nmap <c-l> <c-w>l
nmap <c-h> <c-w>h
" }}}
" File wildcards {{{
set wildignore+=*.pyc,*.o,*.obj,.git,*.egg/**
" }}}
" Color scheme {{{
set background=dark
let g:solarized_termcolors=256
let g:solarized_visibility="high"
let g:solarized_contrast="high"
colorscheme solarized
set colorcolumn=80
highlight ColorColumn ctermbg=235
" }}}
" GUI Mode {{{
if has('gui_running')
	colorscheme solarized
	set guioptions-=T " disable toolbar
	set guifont=Source\ Code\ Pro\ for\ Powerline:h12
	set guioptions+=LlRrb
	set guioptions-=LlRrb
endif
" }}}
" Tabs and Spaces {{{
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
" }}}
" Folding and custom fold line {{{
function! NeatFoldText()
  let line = ' ' . substitute(getline(v:foldstart), '^\s*"\?\s*\|\s*"\?\s*{{' . '{\d*\s*', '', 'g') . ' '
  let lines_count = v:foldend - v:foldstart + 1
  let lines_count_text = '| ' . printf("%10s", lines_count . ' lines') . ' |'
  let foldchar = matchstr(&fillchars, 'fold:\zs.')
  let foldtextstart = strpart('+' . repeat(foldchar, v:foldlevel*2) . line, 0, (winwidth(0)*2)/3)
  let foldtextend = lines_count_text . repeat(foldchar, 8)
  let foldtextlength = strlen(substitute(foldtextstart . foldtextend, '.', 'x', 'g')) + &foldcolumn
  return foldtextstart . repeat(foldchar, winwidth(0)-foldtextlength) . foldtextend
endfunction
set foldtext=NeatFoldText()
" }}}
" File types and settings {{{
" Python {{{
if has("autocmd")
  autocmd Filetype python setlocal expandtab
  autocmd Filetype python set foldmethod=indent foldlevel=99
endif
" }}}
" C {{{
if has("autocmd")
  autocmd Filetype c setlocal expandtab
  autocmd Filetype c setlocal shiftwidth=2
  autocmd Filetype c setlocal softtabstop=2
  autocmd Filetype c setlocal tabstop=2
  autocmd Filetype c set foldmethod=syntax foldlevel=99 foldlevel=99
endif

" }}}
" }}}
" Plugin Settings {{{
" Powerline {{{
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim
set laststatus=2
set noshowmode
" }}}
" }}}
